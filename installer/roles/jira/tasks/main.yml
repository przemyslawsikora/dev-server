---
- name: Create data volume for Jira's Postgres
  docker_volume:
    name: jira-db-data

- name: Pull Postgres Docker image
  docker_image:
    name: postgres:10.12
    source: pull

- name: Create Postgres container for Jira
  docker_container:
    name: jiradb
    image: postgres:10.12
    restart_policy: always
    networks_cli_compatible: yes
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - jiradb
    env:
      POSTGRES_USER: "{{ jira_db_user }}"
      POSTGRES_PASSWORD: "{{ jira_db_pass }}"
      POSTGRES_DB: "{{ jira_db_name }}"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - jira-db-data:/var/lib/postgresql/data

- name: Create data volume for Jira
  docker_volume:
    name: jira-data

- name: Pull Jira Software Docker image
  docker_image:
    name: atlassian/jira-software:8.13
    source: pull

- name: Create Jira Software Docker container
  docker_container:
    name: jira
    image: atlassian/jira-software:8.13
    restart_policy: always
    networks_cli_compatible: yes
    networks:
      - name: "{{ docker_network_name }}"
        aliases:
          - jira
    env:
      ATL_PROXY_NAME: "jira.{{ domain }}"
      ATL_PROXY_PORT: "443"
      ATL_TOMCAT_SCHEME: "https"
      ATL_TOMCAT_SECURE: "true"
    volumes:
      - jira-data:/var/atlassian/application-data/jira
    labels:
      traefik.enable: "true"
      traefik.http.routers.jira.rule: "Host(`jira.{{ domain }}`)"
      traefik.http.routers.jira.tls.certresolver: "letsEncrypt"
      traefik.http.routers.jira.entrypoints: "websecure"
      traefik.http.routers.jira.service: "jira"
      traefik.http.services.jira.loadbalancer.server.port: "8080"